datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  avatar        String?
  posts         Post[]
  subscriptions Subscription[]
  subscribers   Subscription[]  @relation("SubscriberToCreator")
  messages      Message[]      @relation("UserMessages")
  receivedMessages Message[]   @relation("ReceivedMessages")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Post {
  id          String    @id @default(cuid())
  url         String
  type        String    // 'image' or 'video'
  description String?
  price       Float?
  isPublic    Boolean   @default(false)
  creator     User      @relation(fields: [creatorId], references: [id])
  creatorId   String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Subscription {
  id          String    @id @default(cuid())
  subscriber  User      @relation("SubscriberToCreator", fields: [subscriberId], references: [id])
  subscriberId String
  creator     User      @relation(fields: [creatorId], references: [id])
  creatorId   String
  price       Float
  status      String    // 'active' or 'cancelled'
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Message {
  id          String    @id @default(cuid())
  content     String
  sender      User      @relation("UserMessages", fields: [senderId], references: [id])
  senderId    String
  receiver    User      @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId  String
  attachments String[]  // Array of URLs
  prices      Float[]   // Corresponding prices for attachments
  createdAt   DateTime  @default(now())
}
